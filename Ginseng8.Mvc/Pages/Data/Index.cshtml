@page "/Data/{id:int?}"
@model Ginseng.Mvc.Pages.Data.IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

<div class="row">
    <div class="col-3">
    </div>
    <div class="col-9">
        <div class="lead justify-content-between">
            <i class="far fa-database"></i>
            <span>@Html.CurrentAppName()</span>
            <button class="btn btn-light dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@(Model?.CurrentModel?.Name ?? "no model selected")</button>
            <div class="dropdown-menu">
                @foreach (var dm in Model.ModelSelect)
                {
                    <a asp-route-modelId="@dm.Value" class="dropdown-item">@dm.Text</a>
                }
            </div>
            <a asp-page="/Setup/DataModels" asp-route-appId="@Html.CurrentAppId()">
                <i class="fas fa-cog"></i>
            </a>
        </div>

        @if (Model.ReferencingProjects.Any())
        {
            <ul class="list-inline small ml-4">
                <li class="list-inline-item">Used by Project(s):</li>
                @foreach (var prj in Model.ReferencingProjects)
                {
                    <li class="list-inline-item">
                        <a asp-route-id="@prj.Id" asp-page="/Dashboard/Projects">@prj.Name</a>
                    </li>
                }
            </ul>
        }

        @Html.ActionAlert(TempData)
    </div>
</div>

<hr />

<div class="row">
    <div class="col-3">
        <form method="post" asp-page-handler="AddClass" class="form-inline mt-2 row no-gutters">
            <div class="col pr-2">
                <input type="hidden" name="Id" value="0" />
                <input type="hidden" name="DataModelId" value="@Model.ModelId" />
                <input type="text" name="Name" required="required" class="form-control-sm form-control w-100" placeholder="add model class" />
            </div>
            <div class="col col-auto">
                <button class="btn btn-dark btn-sm">Add</button>
            </div>
        </form>

        <div class="list-group mt-3">
            @foreach (var c in Model.ModelClasses)
            {
                var activeClass = (c.Id == Model.Id) ? "active" : string.Empty;
                <a class="list-group-item list-group-item-secondary list-group-item-action @activeClass" asp-route-id="@c.Id">
                    <i class="fal fa-table mr-2"></i>
                    @c.Name
                </a>
            }
        </div>
    </div>

    <div class="col-9">
        @if (Model.CurrentClass ==  null)
        {
            <h5>(no class selected)</h5>
        }
        else
        {
            <h5>
                <i class="fal fa-table mr-2"></i>
                <span class="editable" id="class-id-@Model.CurrentClass.Id" data-url="/Update/ModelClassName">@Model.CurrentClass.Name</span>
                <span class="small text-muted">
                @{
                    var keyProps = Model.Properties.Where(p => p.InPrimaryKey);
                    if (keyProps.Any())
                    {
                        <i class="fal fa-key"></i>
                        <span>@(string.Join(" + ", keyProps.Select(p => p.Name)))</span>
                    }
                }
                </span>
            </h5>
            @await Html.PartialAsync("Shared/_HtmlEditor", new HtmlEditorView() { Id = Model.Id, IdPrefix = "model-class", PostUrl = "/Update/ModelClassBody", Content = Model.CurrentClass.HtmlBody, UploadFolderName = "DataModels" })

            var grid = new GridEditor<ModelProperty>(this, Xsrf, (record) => record.Id, defaults: new { ModelClassId = Model.CurrentClass.Id, Position = Model.Properties.Count() + 1 });

            <table class="table mt-2"><tbody class="js-table-body-sortable">
                <tr>
                    <th title="Part of Primary Key">PK</th>
                    <th>Property Name</th>
                    <th>Type</th>
                    <th title="Nullable">N</th>
                    <th>Description</th>
                    <th></th>
                </tr>
                @foreach (var p in Model.Properties)
                {
                    <tr id="@grid.RowId(p)" class="js-table-row-sortable bg-light">
                        <td>@grid.CheckBox(m => m.InPrimaryKey)</td>
                        <td>@grid.TextBox(m => m.Name, new { @class = "form-control-sm", autocomplete = "off" })</td>
                        <td>
                            @grid.DropDownList(m => m.TypeId, Model.DataTypeSelect, new { @class = "form-control-sm" })
                            @if (!p.IsScalarType)
                            {
                                <a asp-route-id="@p.TypeId">
                                    <i class="fas fa-chevron-double-right"></i>
                                </a>
                            }
                        </td>
                        <td>@grid.CheckBox(m => m.IsNullable)</td>
                        <td>@grid.TextBox(m => m.Description, new { @class = "form-control-sm", autocomplete = "off" })</td>
                        <td>@grid.Controls()</td>
                    </tr>
                }
                <tr id="@grid.NewRowId()">
                    <td>@grid.CheckBox(m => m.InPrimaryKey)</td>
                    <td>@grid.TextBox(m => m.Name, new { @class = "form-control-sm", autocomplete = "off" })</td>
                    <td>@grid.DropDownList(m => m.TypeId, Model.DataTypeSelect, new { @class = "form-control-sm" })</td>
                    <td>@grid.CheckBox(m => m.IsNullable)</td>
                    <td>@grid.TextBox(m => m.Description, new { @class = "form-control-sm", autocomplete = "off" })</td>
                    <td>
                        @grid.Controls()
                    </td>
                </tr>
            </tbody></table>
            @grid.HandlerForms("SaveProperty", "DeleteProperty")

            @if (!Model.Properties.Any() && Model.CurrentClass != null)
                    {
                <form method="post" asp-page-handler="DeleteClass">
                    <input type="hidden" name="Id" value="@Model.CurrentClass.Id" />
                    <button class="btn btn-danger">Delete Model Class</button>
                </form>
            }

            @if (Model.Children.Any())
            {
                <h6>Child Classes</h6>
                <ul>
                    @foreach (var child in Model.Children)
                    {
                        <li>
                            <a asp-route-id="@child.ClassId">@child.ClassName</a>
                                <span>@child.PropertyName</span>
                                <span class="small text-muted">
                                @if (child.RelationshipType == RelationshipType.OneToOne)
                                {
                                    <text>one-to-one</text>
                                }
                                else
                                {
                                    <text>one-to-many</text>
                                }
                            </span>
                        </li>
                    }
                </ul>
            }
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/Dashboard.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/adamosoftware/GridEditor.RazorPages@1.0.3/js/GridEditor.min.js"></script>
}