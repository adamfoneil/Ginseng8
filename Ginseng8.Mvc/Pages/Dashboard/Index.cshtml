@page
@model Ginseng.Mvc.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

@if (!Model.AppId.HasValue)
{
    foreach (var t in Model.Teams)
    {
        <hr />

        if (t.UseApplications)
        {
            <h4>@t.Name <span class="text-muted small">Applications</span></h4>
            <partial name="Items/_AppCards" model="Model.AppInfo[t.Id]" />
            @if (Model.ProjectsWithoutApps[t.Id].Any())
            {
                <hr/>
                <h5>@t.Name Global Projects <span class="small text-muted">Projects not specific to an application</span></h5>                
                <partial name="Items/_ProjectCardsInner" model="Model.ProjectsWithoutApps[t.Id]" />
            }
        }
        else
        {
            <h4>@t.Name <span class="text-muted small">Projects</span></h4>
            <partial name="Items/_ProjectCardsInner" model="Model.ProjectInfo[t.Id]" />
            <partial name="Items/_ProjectCreate" model="@(new InsertProject() { TeamId = t.Id })" />
        }
    }
}
else
{
    <hr />
    <h4>
        <a asp-page="/Dashboard/Index" class="nounderline" title="Back to Organization dashboard">
            <i class="fas fa-arrow-up"></i>
        </a>
        @Model.Application.Team.Name / @Model.Application.Name <span class="small text-muted">Projects</span>
    </h4>
    <partial name="Items/_ProjectCardsInner" model="Model.AppProjects" />
    @if (Model.Application.TeamId.HasValue)
    {
        <partial name="Items/_ProjectCreate" model="@(new InsertProject() { TeamId = Model.Application.TeamId.Value, ApplicationId = Model.AppId })" />
    }

    @if (Model.WorkItems.Any())
    {
        <h5>Work Items without a Project</h5>
        <div id="accordion" class="ml-3">
            @foreach (var item in Model.WorkItems)
            {
                <partial name="Items/_Card" model="@(new WorkItemCardView() { WorkItem = item, Dropdowns = Model.Dropdowns, SelectedLabels = Model.SelectedLabels[item.Id], UserId = Model.UserId, Comments = Model.Comments[item.Id], AssignToUsers = Model.AssignToUsers })" />
            }
            @await Html.PartialAsync("Items/_InsertItem", new InsertItemView(new Dictionary<string, int>()
            {
                { "teamId", Model.Application.TeamId ?? 0 },
                { "applicationId", Model.AppId.Value }
            }) { Dropdowns = Model.Dropdowns, AssignToUsers = Model.AssignToUsers, UseApplications = Model.WorkItems.First().UseApplications })
        </div>
    }
}

@section Scripts {
    <script src="~/js/Projects.js"></script>
}