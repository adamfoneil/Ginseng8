@page
@model Ginseng.Mvc.Pages.Work.IndexModel
@{
    ViewData["Title"] = "Index";
}

<div id="accordion">
@foreach (var appGrp in Model.WorkItems.GroupBy(row => row.ApplicationId))
{
    <h4>@appGrp.First().ApplicationName</h4>
    <ul class="nav nav-tabs" id="assignedUserTab" role="tablist">
        @if (Model.ImpededItems.Any(wi => wi.ApplicationId == appGrp.Key))
        {
            <li class="nav-item">
                <a href="#impeded-@appGrp.Key" data-toggle="tab" class="nav-link">
                    <i class="far fa-comment-times"></i>
                    <span>Impediments</span>                    
                </a>
            </li>
        }
        
        @if (Model.PausedItems.Any(wi => wi.ApplicationId == appGrp.Key))
        {
            <li class="nav-item">
                <a href="#paused-@appGrp.Key" data-toggle="tab" class="nav-link">
                    <i class="fas fa-pause-circle"></i>
                    <span>Paused</span>
                </a>
            </li>
        }

        @if (Model.StoppedItems.Any(wi => wi.ApplicationId == appGrp.Key))
        {
            <li class="nav-item">
                <a href="#stopped-@appGrp.Key" data-toggle="tab" class="nav-link">
                    <i class="fas fa-stop-circle"></i>
                    <span>Not Started</span>
                </a>
            </li>
        }        
    </ul>

    <div class="tab-content my-3" id="tabContent">
        @if (Model.ImpededItems.Any())
        {
            <div class="tab-pane fade" id="impeded-@appGrp.Key" role="tabpanel">
                <p>Items with an impediment</p>
                <partial name="Items/_FilteredItems" model="new FilteredItemView() { Page = Model, WorkItems = Model.ImpededItems.Where(wi => wi.ApplicationId == appGrp.Key), Comments = Model.Comments, AssignToUsers = Model.AssignToUsers }"/>
            </div>
        }

        @if (Model.PausedItems.Any())
        {
            <div class="tab-pane fade" id="paused-@appGrp.Key" role="tabpanel">
                <p>Items waiting for someone to resume, either because of hand-off or the assigned people removed themselves.</p>
                <partial name="Items/_FilteredItems" model="new FilteredItemView() { Page = Model, WorkItems = Model.PausedItems.Where(wi => wi.ApplicationId == appGrp.Key), Comments = Model.Comments, AssignToUsers = Model.AssignToUsers }"/>
            </div>
        }

        @if (Model.StoppedItems.Any())
        {
            <div class="tab-pane fade" id="stopped-@appGrp.Key" role="tabpanel">
                <p>Items in a milestone that no one is working on.</p>
                <partial name="Items/_FilteredItems" model="new FilteredItemView() { Page = Model, WorkItems = Model.StoppedItems.Where(wi => wi.ApplicationId == appGrp.Key), Comments = Model.Comments, AssignToUsers = Model.AssignToUsers }"/>
            </div>
        }                
    </div>
}
</div>

