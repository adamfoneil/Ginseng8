@page
@model Ginseng.Mvc.Pages.Dashboard.MilestonesModel
@{
    ViewData["Title"] = "Milestones";
}

<div id="accordion">
@foreach (var appGrp in Model.WorkItems.GroupBy(row => row.ApplicationId))
{
    <h4>@appGrp.First().ApplicationName</h4>

    <ul class="nav nav-tabs" role="tablist">
        @foreach (var milestoneGrp in appGrp.OrderBy(row => row.SortMilestoneDate).GroupBy(row => row.MilestoneId))
        {
            var milestoneItem = milestoneGrp.First();
            <li class="nav-item">
                <a href="#app-@appGrp.Key-ms@(milestoneGrp.Key)" data-toggle="tab" class="nav-link" id="tab-@milestoneGrp.Key">
                    <partial name="Items/_MilestoneHeader" model="milestoneItem"/>
                </a>
            </li>
        }
    </ul>
    <div class="tab-content my-3" id="tabContent">
    @foreach (var milestoneGrp in appGrp.OrderBy(row => row.MilestoneDate).GroupBy(row => row.MilestoneId))
    {    
        <div id="app-@appGrp.Key-ms@(milestoneGrp.Key)" class="tab-pane fade" data-milestone-id="@milestoneGrp.Key" data-tab-id="tab-@milestoneGrp.Key" role="tabpanel">
            <div class="ml-3">
                <partial name="Items/_Load" model="Model.GetLoadView(milestoneGrp)"/>

                @if (milestoneGrp.First().MilestoneDate < DateTime.Today)
                {
                    if (Model.NextSoonest != null)
                    {
                        <form method="post" asp-page-handler="MoveToNextMilestone">
                            <input type="hidden" name="appId" value="@appGrp.Key"/>
                            <input type="hidden" name="fromMilestoneId" value="@milestoneGrp.Key"/>
                            <input type="hidden" name="toMilestoneId" value="@Model.NextSoonest.Id"/>
                            <label>Move to next soonest milestone</label>
                            <button class="btn btn-sm btn-dark" type="submit">@Html.FormatValue(Model.NextSoonest.Date, "{0:ddd M/d}")</button>
                        </form>
                    }                    

                    if (Model.NextGenerated != null)
                    {
                        <form method="post" asp-page-handler="MoveToNewMilestone">
                            <input type="hidden" name="appId" value="@appGrp.Key"/>
                            <input type="hidden" name="fromMilestoneId" value="@milestoneGrp.Key"/>
                            <input type="hidden" name="toName" value="@Model.NextGenerated.Name"/>
                            <input type="hidden" name="toDate" value="@Model.NextGenerated.Date"/>
                            <label>Move to new milestone</label>
                            <button class="btn btn-sm btn-dark" type="submit">@Html.FormatValue(Model.NextGenerated.Date, "{0:ddd M/d}")</button>
                            <label>based on your <a asp-page="/Setup/Organization">Org Setup</a></label>
                        </form>
                    }
                }

                @foreach (var item in milestoneGrp)
                {
                    <partial name="Items/_Card" model="new WorkItemCardView() { WorkItem = item, Dropdowns = Model.Dropdowns, SelectedLabels = Model.SelectedLabels[item.Id], UserId = Model.UserId, Comments = Model.Comments[item.Id] }" />
                }
                @await Html.PartialAsync("Items/_InsertItem", new InsertItemView(new Dictionary<string, int>()
                {
                    { "applicationId", appGrp.Key },
                    { "milestoneId", milestoneGrp.Key }
                }))
            </div>
            @{ 
                var recentlyClosed = Model.ClosedItems[milestoneGrp.Key].Take(10);
            }                    
            @if (recentlyClosed.Any())
            {
                <partial name="Items/_RecentlyClosed" model="recentlyClosed"/>
            }
        </div>            
    }
    </div>    
}
</div>

@if (Model.CurrentOrgUser.CurrentAppId.HasValue)
{
    <div id="emptyMilestones">
        <span>Tip: Milestones with no work items show here. After they get at least one work item, they appear in tabs above.</span>
        @foreach (var ms in Model.EmptyMilestones)
        {            
            <partial name="Items/_MilestoneHeader" model="ms"/>
            <div class="ml-3">
                @await Html.PartialAsync("Items/_InsertItem", new InsertItemView(new Dictionary<string, int>()
                {
                    { "applicationId", Model.CurrentOrgUser.CurrentAppId.Value },
                    { "milestoneId", ms.MilestoneId }
                }))
            </div>
        }
    </div>
}

@if (Model.CurrentOrgUser.CurrentAppId.HasValue)
{
    <partial name="Dashboard/Items/_CreateMilestone"/>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker();
        });
    </script>
}