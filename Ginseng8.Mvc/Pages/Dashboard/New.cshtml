@page "/Dashboard/New/{id?}"
@model Ginseng.Mvc.Pages.Dashboard.NewModel
@{
    ViewData["Title"] = "New";    
    bool useApps = Model.CurrentOrgUser?.CurrentTeam?.UseApplications ?? true;
}

<p>Use this to create new work items for the appropriate team.</p>

@if (!Model.CurrentOrgUser.CurrentTeamId.HasValue)
{
    <p>Please select a team above, or click a team button below:</p>
    <ul class="">
        @foreach (var team in Model.Teams)
        {
            <li class="mb-3">
                <a asp-action="CurrentTeam" asp-controller="Update" asp-route-id="@team.Id" asp-route-returnUrl="/Dashboard/New" class="btn btn-secondary">@team.Name</a>
            </li>
        }
    </ul>
    return;
}

@if (Model.AppId == 0 && useApps)
{
    <p>Please select an application below:</p>
    <ul>
        @foreach (var appOption in Model.Applications)
        {
            <li class="mb-3">
                <a asp-action="CurrentApp" asp-controller="Update" asp-route-id="@appOption.Id" asp-route-returnUrl="/Dashboard/New" class="btn btn-secondary">@appOption.Name</a>
            </li>
        }
    </ul>
    return;
}

@{ var app = Model.SelectedApp; }
<div id="accordion">
    <h4>@app.Name</h4>
    <div class="ml-3">
        <p>@app.Description</p>

        @if (!Model.Labels[app.Id].Any())
        {
            <p>Add one or more <a asp-page="/Setup/Labels">labels</a> to this application to enable work item entry,
                or make the <a asp-page="/Setup/Applications">application</a> inactive to remove it from this page.</p>
        }
        else
        {
            <ul class="nav nav-pills nav-fill nav-justified mb-3 justify-content-center">
            @foreach (var label in Model.Labels[app.Id].OrderBy(row => row.Name))
            {
                string activeClass = (label.Id == Model.FilterLabelId) ? "active" : string.Empty;
                <li>
                    <a asp-page="/Dashboard/New" asp-route-id="@label.Id" class="nav-link @activeClass">@label.Name <sup>@Model.GetOpenItemCount(label.Id)</sup></a>
                </li>
            }
            </ul>

            @if (Model.FilterLabelId == 0)
            {
                <div>
                    <p class="text-center">Please click a label to enter or view the new items present.</p>
                </div>
                return;
            }

            var currentLabel = Model.SelectedLabel;

            <div class="ml-3">
                <p>Add new <span class="badge" style="color:@currentLabel.ForeColor;background-color:@currentLabel.BackColor">@currentLabel.Name</span> item, will notify <strong>@Model.GetLabelNotifyUsers(currentLabel.Id)</strong></p>
                @await Html.PartialAsync("Items/_InsertItem", new InsertItemView(new Dictionary<string, int>()
                {
                    { "teamId", Model.TeamId },
                    { "applicationId", app.Id },
                    { "labelId", currentLabel.Id }
                }) { Dropdowns = Model.Dropdowns, AssignToUsers = Model.AssignToUsers, UseApplications = Model.CurrentOrgUser.CurrentTeam.UseApplications })

                @if (Model.LabelInstructions.ContainsKey(currentLabel.Id))
                {
                    <div class="mt-2">
                        <i class="far fa-info-circle"></i>
                        <span><a data-toggle="collapse" href="#instructions-@currentLabel.Id-@app.Id">Tips on writing a good @currentLabel.Name item</a></span>
                    </div>
                    <div class="collapse ml-3" id="instructions-@currentLabel.Id-@app.Id">
                        @Html.Raw(Model.LabelInstructions[currentLabel.Id].HtmlBody)
                    </div>
                }

                @foreach (var item in Model.WorkItems)
                {
                    <partial name="Items/_Card" model="new WorkItemCardView() { WorkItem = item, Dropdowns = Model.Dropdowns, SelectedLabels = Model.SelectedLabels[item.Id], UserId = Model.UserId, Comments = Model.Comments[item.Id], AssignToUsers = Model.AssignToUsers }" />
                }
            </div>
        }
    </div>    
</div>